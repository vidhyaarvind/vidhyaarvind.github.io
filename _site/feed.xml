<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-04-06T21:27:30-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Vidhya Arvind</title><subtitle></subtitle><author><name>Vidhya Arvind</name><email>vidhya.arvind@gmail.com</email></author><entry><title type="html">How Netflix Uses Data Abstraction To Operate 100s of Use-Cases</title><link href="http://localhost:4000/talks/2024/03/12/austin-api-summit.html" rel="alternate" type="text/html" title="How Netflix Uses Data Abstraction To Operate 100s of Use-Cases" /><published>2024-03-12T16:51:11-07:00</published><updated>2024-03-12T16:51:11-07:00</updated><id>http://localhost:4000/talks/2024/03/12/austin-api-summit</id><content type="html" xml:base="http://localhost:4000/talks/2024/03/12/austin-api-summit.html"><![CDATA[<p>At Netflix, Data abstraction plays a pivotal role in hosting 100s of use cases that scale, they are widely adopted and depended on by mission-critical systems. In this talk, I show how to design reliable APIs and layout data for Key-Value services for petabyte-scale datasets. Key-value service uses a control plane and data plane to abstract the data, uses some novel techniques to reliably store and safely scale the service to 100s of instances.</p>

<p><a href="/assets/austin_summit_how_netflix_uses_data_abstraction_to_operate_100s_of_use_cases.pdf">Slides</a></p>

<p><a href="https://www.youtube.com/watch?v=XKPOr-7loBo&amp;t=168s" title="Austin API Summit 2024"><img src="http://img.youtube.com/vi/sQ-_jFgOBng/0.jpg" alt="Austin API Summit 2024" /></a></p>]]></content><author><name>Vidhya Arvind</name><email>vidhya.arvind@gmail.com</email></author><category term="talks" /><summary type="html"><![CDATA[At Netflix, Data abstraction plays a pivotal role in hosting 100s of use cases that scale, they are widely adopted and depended on by mission-critical systems. In this talk, I show how to design reliable APIs and layout data for Key-Value services for petabyte-scale datasets. Key-value service uses a control plane and data plane to abstract the data, uses some novel techniques to reliably store and safely scale the service to 100s of instances.]]></summary></entry><entry><title type="html">How Netflix Delivers Key-Value and Time-Series Storage at Any Scale</title><link href="http://localhost:4000/talks/2023/12/12/cassandra-summit.html" rel="alternate" type="text/html" title="How Netflix Delivers Key-Value and Time-Series Storage at Any Scale" /><published>2023-12-12T15:51:11-08:00</published><updated>2023-12-12T15:51:11-08:00</updated><id>http://localhost:4000/talks/2023/12/12/cassandra-summit</id><content type="html" xml:base="http://localhost:4000/talks/2023/12/12/cassandra-summit.html"><![CDATA[<p>At Netflix, Apache Cassandra’s bread and butter workloads are wide-column storage for Key-Value and Time-Series use cases, but for those that operate at scale they know that if you just structure your tables naively your clusters will become unstable as partitions or columns grow in size. In this talk, we show how to design reliable APIs and lay out Key-Value and Time-Series data in Apache Cassandra for petabyte scale datasets. For example, most Key-Value data is small, but for large partitions we present a novel technique to dynamically bucket data, providing users with fast access for small data and linearly scalable latency for large values. Next, we will show how to lay out Time-Series datasets with table sharding, time and random bucketing so that large partitions are automatically split while maintaining aggressive latency goals. In addition, since we use tables for data expiration rather than compaction, we can get up to 2x more storage out of the same disk space. By combining fully-idempotent APIs, novel table layouts, bucketing algorithms, and compression schemes Netflix has been able to scale Apache Cassandra usage orders of magnitude further than we could before.</p>

<p><a href="/assets/cassandra_summit_how_netflix_delivers_key_value_and_time_series_storages_at_any_scale.pdf">Slides</a></p>

<p><a href="https://www.youtube.com/watch?v=sQ-_jFgOBng&amp;t=1s" title="Cassandra Summit 2023"><img src="http://img.youtube.com/vi/sQ-_jFgOBng/0.jpg" alt="Cassandra Summit 2023" /></a></p>]]></content><author><name>Vidhya Arvind</name><email>vidhya.arvind@gmail.com</email></author><category term="talks" /><summary type="html"><![CDATA[At Netflix, Apache Cassandra’s bread and butter workloads are wide-column storage for Key-Value and Time-Series use cases, but for those that operate at scale they know that if you just structure your tables naively your clusters will become unstable as partitions or columns grow in size. In this talk, we show how to design reliable APIs and lay out Key-Value and Time-Series data in Apache Cassandra for petabyte scale datasets. For example, most Key-Value data is small, but for large partitions we present a novel technique to dynamically bucket data, providing users with fast access for small data and linearly scalable latency for large values. Next, we will show how to lay out Time-Series datasets with table sharding, time and random bucketing so that large partitions are automatically split while maintaining aggressive latency goals. In addition, since we use tables for data expiration rather than compaction, we can get up to 2x more storage out of the same disk space. By combining fully-idempotent APIs, novel table layouts, bucketing algorithms, and compression schemes Netflix has been able to scale Apache Cassandra usage orders of magnitude further than we could before.]]></summary></entry><entry><title type="html">Propeller Propulsion Science Olympiad 2021</title><link href="http://localhost:4000/projects/2021/03/16/science-olympiad.html" rel="alternate" type="text/html" title="Propeller Propulsion Science Olympiad 2021" /><published>2021-03-16T00:00:00-07:00</published><updated>2021-03-16T00:00:00-07:00</updated><id>http://localhost:4000/projects/2021/03/16/science-olympiad</id><content type="html" xml:base="http://localhost:4000/projects/2021/03/16/science-olympiad.html"><![CDATA[<p>Propeller Propulsion Science Olympiad 2021</p>

<p><a href="https://www.soinc.org/sites/default/files/uploaded_files/ScienceOlympiad5.0.pdf">Click for details</a></p>

<p>1st flight:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Time: 6:98, Distance:  64 Feet, 1950.72 cm
</code></pre></div></div>

<p>2nd flight:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Time: 13:08, Distance:  71 Feet, 2164.08 cm
</code></pre></div></div>

<p>3rd Flight:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Time: 3:29, Distance: 0 
</code></pre></div></div>

<p>4th Flight:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Time: 2:69, Distance: 31 Feet, 944.88 cms 
</code></pre></div></div>

<p><a href="https://www.youtube.com/watch?v=xJBVhoKC-l8&amp;t=1s" title="Science Olympiad 2021"><img src="http://img.youtube.com/vi/xJBVhoKC-l8/0.jpg" alt="Science Olympiad 2021" /></a></p>]]></content><author><name>Vidhya Arvind</name><email>vidhya.arvind@gmail.com</email></author><category term="projects" /><summary type="html"><![CDATA[Propeller Propulsion Science Olympiad 2021]]></summary></entry></feed>